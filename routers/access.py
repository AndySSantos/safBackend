# generated by fastapi-codegen:
#   filename:  safuamiAPI(1).yaml
#   timestamp: 2023-12-23T00:00:17+00:00

from __future__ import annotations

from fastapi import APIRouter, UploadFile

from dependencies import *

from services.access import *

import shutil
import os
router = APIRouter(tags=['access'])


@router.get(
    '/access/users/{user_id}',
    response_model=None,
    responses={
        '202': {'model': AccessTurnstile},
        '401': {'model': Error},
        '403': {'model': Error},
        '404': {'model': Error},
    },
    tags=['access'],
)
def get_access_turnstiles(
    user_id: int = Path(..., alias='userId')
) -> Union[None, AccessTurnstile, Error]:
    """
    Conect to turnstile
    """
    pass


@router.post(
    '/access/users/{userId}/turnstiles/{turnstileId}',
    response_model=Error,
    responses={
        '400': {'model': Error},
        '403': {'model': Error},
        '408': {'model': Error},
        '503': {'model': Error},
    },
    tags=['access'],
)
async def saf_process(
    
    userId: str = Path(..., alias='userId'),turnstileId: str = Path(..., alias='turnstileId'),
    file: UploadFile = File(...)
) -> Error:
    """
    Authentication
    """
    # Ruta donde se guardarán las imágenes (ajústala según tus necesidades)
    upload_folder = PATH_DATASET
        
        # Asegurarse de que la carpeta exista, si no, créala
        #upload_folder.mkdir(parents=True, exist_ok=True)
        
        # Guardar la imagen con el mismo nombre que recibió en la solicitud
        # Ruta completa del archivo
    file_path = os.path.join(upload_folder, file.filename)

        # Guardar el archivo
    with open(file_path, "wb") as buffer:
        shutil.copyfileobj(file.file, buffer)

        
    return system_autentication_facial(userId,file_path,turnstileId)
